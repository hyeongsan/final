<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"	        column="prod_name" 		    jdbcType="VARCHAR" />
		<result property="prodDetail" 	    column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 			column="price" 				jdbcType="NUMERIC" />
		<result property="fileName" 		column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 			jdbcType="DATE" />		
		<result property="proTranCode" 		column="TRANCODE" 			jdbcType="VARCHAR" />
		<result property="tranNo" 			column="tran_no" 			jdbcType="VARCHAR" />		
		<result property="wishlist" 			column="wishlist" 			jdbcType="VARCHAR" />									
	</resultMap>
		
	 <!-- SQL : SELECT ONE.  -->
	<select id="maxProduct" resultType="int">
		SELECT
		NVL(MAX(prod_no),0)
		FROM product 		
	</select>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
		INSERT
		INTO product (prod_no ,prod_name,prod_detail,manufacture_day,price,reg_date,image_file)
		VALUES	 (seq_product_prod_no.NEXTVAL , #{prodName} , #{prodDetail} , #{manuDate} , #{price} , SYSDATE , #{fileName})
	 </insert>
	 
	 	 	
	 <!-- SQL : SELECT ONE.  -->
	<select id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		*
		FROM product 
		WHERE prod_no=#{value}
	</select>
	
	 
	 
	 <!-- SQL : UPDATE  -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day = #{manuDate} ,
			price =	#{price},			
			image_file = #{fileName},				
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
	 
	 <update id="setProductTranNo" parameterType="int">
	 	UPDATE product
	   	<set>
	   		tran_no	= #{tranNo}			
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
		 
	<!-- SQL : SELECT LIST  -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT DISTINCT p.prod_no, p.prod_name, p.price, t.tran_status_code TRANCODE, p.prod_detail, p.reg_date, t.tran_no tranNo, p.manufacture_day, p.image_file
											FROM product p,transaction t  
											<where>
												p.prod_no = t.prod_no(+)
											<if test="searchCondition != null">													 																			
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				and p.prod_no like '%'|| #{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				and p.prod_name like '%'|| #{searchKeyword} ||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				and p.price like '%'|| #{searchKeyword} ||'%'
													</if>												
												</if>
											</where>
											ORDER BY p.prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	

	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count  -->	
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no, prod_name, price
											FROM product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no like '%'|| #{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				prod_name like '%'|| #{searchKeyword} ||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				price like '%'|| #{searchKeyword}||'%'
													</if>
												</where>
											</if>
											ORDER BY prod_no ) countTable						
	 </select>	 	 
</mapper>












	